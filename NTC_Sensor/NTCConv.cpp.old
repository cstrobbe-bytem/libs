/***********************************************************************************************************************
 * File: NTCConv.c
 * Denominazione: Conversione ADC in temperatura decini di grado
 * Hardware:
 * Note:
 *  Abilitare dal file NTCConvcfg.h le NTC in uso
      #define EVISHAY_10K         0   //Vishay Dale 10K con partitore 4K7 1%-390K
      #define ETDK_10K            1   //TDK 10K con partitore 10K 1%-1M
      #define EVSH_4M1003B3C4     0   //Vishay Dale 4M1003-B3(curve 4) con partitore 4K7 1%-390K
      #define EVSH_1M1002B3C1     0   //Vishay Dale 1M1002-B3(curve 1) con partitore 3K3 1%-390K
      #define EUROSWITCH_100K     0   //Euroswitch 100 K con partitore 3K3 1%-390K
      #define TDKB57500M          1   //TDK B57500M con partitore 3K3 1%-390K
 *  Routin di conversione
        NTCconv(uint32_t adc, uint8_t ntc)
        parametri:
            adc = valore adc 12 bit
            ntc = tipo di NTC
        return:
            int16_t temperatura in decimi °C
                    32767   = sonda in corto
                    -32767  = sonda aperta
                    -32768  = sonda non definita
 **********************************************************************************************************************/

/***********************************************************************************************************************
 * Rev. 000 01/04/21 Autore: Ferrazin
 *  Prima revisione
 *    Nata dalla ConvNTC.01
 * Rev. 001 19/05/22 Autore: Ferrazin
 *  Aggiunta gestione sonda Euroswitch
 **********************************************************************************************************************/
#define NTCCONVREV  1       //revisione modulo

/***********************************************************************************************************************
 * Include files
 **********************************************************************************************************************/
#include "NTCConv.hpp"   
#include "NTCConvcfg.h"    

/***********************************************************************************************************************
 * Local pre-processor symbols/macros ('#define')
 **********************************************************************************************************************/

/***********************************************************************************************************************
 * Local type definitions ('typedef')
 **********************************************************************************************************************/
//
//Tabella conversione (definita a fine modulo)
#if(EVISHAY_10K == 1)
const uint32_t tab_VISH10K[];
#endif
#if(ETDK_10K == 1)
const uint32_t tab_TDK10K[];
#endif
#if(EVSH_4M1003B3C4 == 1)
const uint32_t tab_VISH100KC4[]; 
#endif
#if(EVSH_1M1002B3C1 == 1)
const uint32_t tab_VISH10KC1[];
#endif
#if(EUROSWITCH_100K == 1)
const uint32_t tab_EUROS100[];
#endif
#if(TDKB57500M == 1)
const uint32_t tab_TDKB57500M[];
#endif

//Conversione NTC
// parametri:
//  adc = valore adc 12 bit
//  ntc = tipo di NTC
// return:
//  temperatura in decimi �C
//  32767   = sonda in corto
//  -32767  = sonda aperta
//  -32768  = sonda non definita
int16_t NTCconv(uint32_t adc, uint8_t ntc)
{
  uint32_t  i;
  uint32_t  x;
  const uint32_t* tab = 0;
  int TMPmin = 0;           //temperatura minima
  int TMPMax = 0;           //temperatura massima
  uint32_t LenTB;           //lunghezza tabella
  float RA = 1.0;           //R partitore verso massa
  float RB = 1.0;           //R partitore verso Vcc

    switch(ntc)
    {
        case VISHAY_10K:            //Vishay Dale 10K con partitore 4K7 1%-390K
            #if(EVISHAY_10K == 1)
                tab = tab_VISH10K;
            #endif
            TMPmin = -30;
            TMPMax = 125;
            RA = 390000.0;      //390K
            RB =   4700.0;      //4K7
            break;
        case TDK_10K:               //TDK 10K con partitore 10K 1%-1M
            #if(ETDK_10K == 1)
                tab = tab_TDK10K;
            #endif
            TMPmin = -30;
            TMPMax = 125;
            RA = 1000000.0;     //1M
            RB =   10000.0;     //10K
            break;
        case VSH_4M1003B3C4:        //Vishay Dale 4M1003-B3(curve 4) con partitore 4K7 1%-390K
            #if(EVSH_4M1003B3C4 == 1)
                tab = tab_VISH100KC4;
            #endif
            TMPmin = -30;
            TMPMax = 125;
            RA = 390000.0;      //390K
            RB =   4700.0;      //4K7
            break;
        case VSH_1M1002B3C1:        //Vishay Dale 1M1002-B3(curve 1) con partitore 3K3 1%-390K
            #if(EVSH_1M1002B3C1 == 1)
                tab = tab_VISH10KC1;
            #endif
            TMPmin = -30;
            TMPMax = 125;
            RA = 390000.0;      //390K
            RB =   3300.0;      //4K7
            break;
        case EUROSWITCH100K:        //Euroswitch 100 K con partitore 3K3 1%-390K
            #if(EUROSWITCH_100K == 1)
                tab = tab_EUROS100;
            #endif
            TMPmin = -30;
            TMPMax = 125;
            RA = 390000.0;      //390K
            RB =   4700.0;      //4K7
            break;
        case TDK_B57500M:           //TDK B57500M con partitore 3K3 1%-390K
            #if(TDKB57500M == 1)
                tab = tab_TDKB57500M;
            #endif
            TMPmin = -30;
            TMPMax = 125;
            RA = 390000.0;      //390K
            RB =   3300.0;      //4K7
            break;
    }
    
    if(!tab) return NTC_NONDEF;     //sonda non definita
    
    LenTB = TMPMax-TMPmin;          //lunghezza tabella - 1

    // ricava ohm da adc
    if(adc == 0) return NTC_INCOR;                      //sonda in corto
    float temp1 = (4095.0 / (float)adc);
    if(temp1 <= 1) return NTC_APERT;                    //sonda aperta
    if((RA * (temp1 - 1)) <= RB ) return NTC_APERT;     //sonda aperta
    Rntc = (RB * RA) / ((RA * (temp1 - 1)) - RB) ;
    x = (uint32_t)Rntc;                 //usa valore in ohm come ingresso in tabella

    uint32_t max = tab[0];
    uint32_t min = tab[LenTB];
    if(x > max) return NTC_APERT;       //sonda aperta
    if(x < min) return NTC_INCOR;       //sonda in corto
  
    // 1. Cerca l'indice di tabella tale che:
    //      tab[i + 1] < x <= tab[i]
    for (i = 0; i < LenTB; i++)
    {
        if (x > tab[i + 1] && x <= tab[i]) break;
    }

    // 2. Interpola fra i due valori:
    //      m = 10 / (tab[i] - tab[i+1)
    //      y = y0 + m * (tab[i] - adc)
    float m = 10.0 / (tab[i] - tab[i+1]);
    float t = 10.0 * ((float)TMPmin + i) + m * (float)(tab[i] - x);

    return (int16_t)t;
}

/***********************************************************************************************************************
 * Vishay Dale 10K con partitore 4K7 1%-390K
 *   (indice = T °C, valore = count adc)
 **********************************************************************************************************************/
#if(EVISHAY_10K == 1)
const uint32_t tab_VISH10K[] = {
  // ohm          �C    adc
  135452,   //   -30    3918 (+/- 4)
  127837,   //   -29
  120707,   //   -28
  114028,   //   -27
  107768,   //   -26
  101898,   //   -25
   96391,   //   -24
   91222,   //   -23
   86369,   //   -22
   81809,   //   -21
   77523,   //   -20
   73492,   //   -19
   69701,   //   -18
   66132,   //   -17
   62771,   //   -16
   59606,   //   -15
   56623,   //   -14
   53810,   //   -13
   51157,   //   -12
   48654,   //   -11
   46290,   //   -10
   44058,   //    -9
   41950,   //    -8
   39957,   //    -7
   38072,   //    -6
   36290,   //    -5
   34603,   //    -4
   33006,   //    -3
   31494,   //    -2
   30062,   //    -1
   28704,   //     0
   27417,   //     1
   26197,   //     2
   25039,   //     3
   23940,   //     4
   22897,   //     5
   21906,   //     6
   20964,   //     7
   20070,   //     8
   19219,   //     9
   18410,   //    10
   17641,   //    11
   16909,   //    12
   16212,   //    13
   15548,   //    14
   14916,   //    15
   14313,   //    16
   13739,   //    17
   13192,   //    18
   12669,   //    19
   12171,   //    20
   11696,   //    21
   11242,   //    22
   10809,   //    23
   10395,   //    24
   10000,   //    25
    9622,   //    26
    9261,   //    27
    8916,   //    28
    8585,   //    29
    8269,   //    30
    7967,   //    31
    7678,   //    32
    7400,   //    33
    7135,   //    34
    6881,   //    35
    6637,   //    36
    6403,   //    37
    6179,   //    38
    5965,   //    39
    5759,   //    40
    5561,   //    41
    5372,   //    42
    5189,   //    43
    5015,   //    44
    4847,   //    45
    4686,   //    46
    4531,   //    47
    4382,   //    48
    4239,   //    49
    4101,   //    50
    3969,   //    51
    3842,   //    52
    3719,   //    53
    3601,   //    54
    3488,   //    55
    3379,   //    56
    3274,   //    57
    3172,   //    58
    3075,   //    59
    2981,   //    60
    2890,   //    61
    2803,   //    62
    2719,   //    63
    2638,   //    64
    2559,   //    65
    2484,   //    66
    2411,   //    67
    2341,   //    68
    2273,   //    69
    2207,   //    70
    2144,   //    71
    2083,   //    72
    2024,   //    73
    1967,   //    74
    1912,   //    75
    1858,   //    76
    1807,   //    77
    1757,   //    78
    1709,   //    79
    1662,   //    80
    1617,   //    81
    1574,   //    82
    1532,   //    83
    1491,   //    84
    1451,   //    85
    1413,   //    86
    1376,   //    87
    1340,   //    88
    1305,   //    89
    1272,   //    90
    1239,   //    91
    1208,   //    92
    1177,   //    93
    1147,   //    94
    1118,   //    95
    1091,   //    96
    1063,   //    97
    1037,   //    98
    1012,   //    99
     987,   //   100
     963,   //   101
     940,   //   102
     917,   //   103
     895,   //   104
     874,   //   105
     853,   //   106
     833,   //   107
     814,   //   108
     795,   //   109
     776,   //   110
     758,   //   111
     741,   //   112
     724,   //   113
     708,   //   114
     692,   //   115
     676,   //   116
     661,   //   117
     646,   //   118
     632,   //   119
     618,   //   120
     604,   //   121
     591,   //   122
     578,   //   123
     566,   //   124
     554    //   125    435 (+/- 3)
};
#endif

/***********************************************************************************************************************
 * TDK 10K con partitore 10K 1%-1M
 *   (indice = T °C, valore = count adc)
 **********************************************************************************************************************/
#if(ETDK_10K == 1)
const uint32_t tab_TDK10K[] = {
  // ohm          �C    adc
  111330,   //   -30
  106376,   //   -29
  101422,   //   -28
   96468,   //   -27
   91514,   //   -26
   86560,   //   -25
   82806,   //   -24
   79052,   //   -23
   75298,   //   -22
   71544,   //   -21
   67790,   //   -20
   64924,   //   -19
   62058,   //   -18
   59192,   //   -17
   56326,   //   -16
   53460,   //   -15
   51258,   //   -14
   49056,   //   -13
   46854,   //   -12
   44652,   //   -11
   42450,   //   -10
   40746,   //    -9
   39042,   //    -8
   37338,   //    -7
   35634,   //    -6
   33930,   //    -5
   32600,   //    -4
   31270,   //    -3
   29940,   //    -2
   28610,   //    -1
   27280,   //     0
   26238,   //     1
   25196,   //     2
   24154,   //     3
   23112,   //     4
   22070,   //     5
   21248,   //     6
   20426,   //     7
   19604,   //     8
   18782,   //     9
   17960,   //    10
   17308,   //    11
   16656,   //    12
   16004,   //    13
   15352,   //    14
   14700,   //    15
   14178,   //    16
   13656,   //    17
   13134,   //    18
   12612,   //    19
   12090,   //    20
   11672,   //    21
   11254,   //    22
   10836,   //    23
   10418,   //    24
   10000,   //    25
    9662,   //    26
    9324,   //    27
    8986,   //    28
    8648,   //    29
    8310,   //    30
    8036,   //    31
    7762,   //    32
    7488,   //    33
    7214,   //    34
    6940,   //    35
    6718,   //    36
    6496,   //    37
    6274,   //    38
    6052,   //    39
    5830,   //    40
    5646,   //    41
    5462,   //    42
    5278,   //    43
    5094,   //    44
    4910,   //    45
    4760,   //    46
    4610,   //    47
    4460,   //    48
    4310,   //    49
    4160,   //    50
    4036,   //    51
    3912,   //    52
    3788,   //    53
    3664,   //    54
    3540,   //    55
    3436,   //    56
    3332,   //    57
    3228,   //    58
    3124,   //    59
    3020,   //    60
    2934,   //    61
    2848,   //    62
    2762,   //    63
    2676,   //    64
    2590,   //    65
    2518,   //    66
    2446,   //    67
    2374,   //    68
    2302,   //    69
    2230,   //    70
    2168,   //    71
    2106,   //    72
    2044,   //    73
    1982,   //    74
    1920,   //    75
    1870,   //    76
    1820,   //    77
    1770,   //    78
    1720,   //    79
    1670,   //    80
    1626,   //    81
    1582,   //    82
    1538,   //    83
    1494,   //    84
    1450,   //    85
    1414,   //    86
    1378,   //    87
    1342,   //    88
    1306,   //    89
    1270,   //    90
    1238,   //    91
    1206,   //    92
    1174,   //    93
    1142,   //    94
    1110,   //    95
    1083,   //    96
    1056,   //    97
    1029,   //    98
    1002,   //    99
     975,   //   100
     952,   //   101
     929,   //   102
     906,   //   103
     883,   //   104
     860,   //   105
     840,   //   106
     820,   //   107
     800,   //   108
     780,   //   109
     760,   //   110
     743,   //   111
     726,   //   112
     708,   //   113
     691,   //   114
     674,   //   115
     659,   //   116
     644,   //   117
     629,   //   118
     614,   //   119
     599,   //   120
     586,   //   121
     573,   //   122
     560,   //   123
     547,   //   124
     534    //   125
};
#endif

/***********************************************************************************************************************
 * Vishay Dale 4M1003-B3(curve 4) con partitore 4K7 1%-390K
 *   (indice = T °C, valore = count adc)
 **********************************************************************************************************************/
#if(EVSH_4M1003B3C4 == 1)
const uint32_t tab_VISH100KC4[] = {
  // ohm          �C    adc
 2069000,   //   -30    3918 (+/- 4)
 1939400,   //   -29
 1818700,   //   -28
 1706200,   //   -27
 1601300,   //   -26
 1503500,   //   -25
 1412100,   //   -24
 1326900,   //   -23
 1247300,   //   -22
 1172900,   //   -21
 1103400,   //   -20
 1038400,   //   -19
  977600,   //   -18
  920700,   //   -17
  868000,   //   -16
  817500,   //   -15
  770800,   //   -14
  727000,   //   -13
  685900,   //   -12
  647400,   //   -11
  611300,   //   -10
  577300,   //    -9
  545500,   //    -8
  515600,   //    -7
  487500,   //    -6
  461000,   //    -5
  436200,   //    -4
  412800,   //    -3
  390800,   //    -2
  370100,   //    -1
  350700,   //     0
  333000,   //     1
  315000,   //     2
  299000,   //     3
  284000,   //     4
  269000,   //     5
  255000,   //     6
  243000,   //     7
  230000,   //     8
  219000,   //     9
  207800,   //    10
  197600,   //    11
  187800,   //    12
  178700,   //    13
  170000,   //    14
  161700,   //    15
  154000,   //    16
  146600,   //    17
  139600,   //    18
  133000,   //    19
  126700,   //    20
  120800,   //    21
  115200,   //    22
  109900,   //    23
  104800,   //    24
  100000,   //    25
   95450,   //    26
   91130,   //    27
   87020,   //    28
   83130,   //    29
   79420,   //    30
   75900,   //    31
   72560,   //    32
   69380,   //    33
   66360,   //    34
   63480,   //    35
   60740,   //    36
   58140,   //    37
   55660,   //    38
   53300,   //    39
   51050,   //    40
   48910,   //    41
   46860,   //    42
   44920,   //    43
   43060,   //    44
   41290,   //    45
   39610,   //    46
   38000,   //    47
   36460,   //    48
   34990,   //    49
   33590,   //    50
   32250,   //    51
   30980,   //    52
   29760,   //    53
   28590,   //    54
   27480,   //    55
   26410,   //    56
   25390,   //    57
   24420,   //    58
   23480,   //    59
   22590,   //    60
   21740,   //    61
   20920,   //    62
   20140,   //    63
   19390,   //    64
   18670,   //    65
   17980,   //    66
   17320,   //    67
   16690,   //    68
   16080,   //    69
   15500,   //    70
   14950,   //    71
   14410,   //    72
   13900,   //    73
   13410,   //    74
   12930,   //    75
   12480,   //    76
   12040,   //    77
   11630,   //    78
   11220,   //    79
   10840,   //    80
   10470,   //    81
   10110,   //    82
    9770,   //    83
    9440,   //    84
    9120,   //    85
    8820,   //    86
    8520,   //    87
    8240,   //    88
    7970,   //    89
    7710,   //    90
    7460,   //    91
    7210,   //    92
    6980,   //    93
    6760,   //    94
    6540,   //    95
    6330,   //    96
    6130,   //    97
    5940,   //    98
    5750,   //    99
    5570,   //   100
    5400,   //   101
    5230,   //   102
    5070,   //   103
    4910,   //   104
    4760,   //   105
    4620,   //   106
    4480,   //   107
    4340,   //   108
    4210,   //   109
    4080,   //   110
    3960,   //   111
    3840,   //   112
    3730,   //   113
    3620,   //   114
    3510,   //   115
    3410,   //   116
    3310,   //   117
    3220,   //   118
    3120,   //   119
    3030,   //   120
    2950,   //   121
    2860,   //   122
    2780,   //   123
    2700,   //   124
    2630    //   125    435 (+/- 3)
};
#endif

/***********************************************************************************************************************
 * Vishay Dale 1M1002-B3(curve 1) con partitore 3K3 1%-390K
 *   (indice = T °C, valore = count adc)
 **********************************************************************************************************************/
#if(EVSH_1M1002B3C1 == 1)
const uint32_t tab_VISH10KC1[] = {
  // ohm          �C    adc
  177210,   //   -30    3918 (+/- 4)
  166560,   //   -29
  156620,   //   -28
  147330,   //   -27
  138660,   //   -26
  130540,   //   -25
  122950,   //   -24
  115850,   //   -23
  109200,   //   -22
  102980,   //   -21
   97140,   //   -20
   91670,   //   -19
   86550,   //   -18
   81740,   //   -17
   77220,   //   -16
   72990,   //   -15
   69010,   //   -14
   65270,   //   -13
   61760,   //   -12
   58450,   //   -11
   55350,   //   -10
   52420,   //    -9
   49670,   //    -8
   47080,   //    -7
   44640,   //    -6
   42340,   //    -5
   40170,   //    -4
   38130,   //    -3
   36200,   //    -2
   34380,   //    -1
   32660,   //     0
   31040,   //     1
   29510,   //     2
   28060,   //     3
   26690,   //     4
   25400,   //     5
   24180,   //     6
   23020,   //     7
   21920,   //     8
   20890,   //     9
   19900,   //    10
   18970,   //    11
   18090,   //    12
   17260,   //    13
   16470,   //    14
   15710,   //    15
   15000,   //    16
   14320,   //    17
   13680,   //    18
   13070,   //    19
   12490,   //    20
   11940,   //    21
   11420,   //    22
   10930,   //    23
   10450,   //    24
   10000,   //    25
    9572,   //    26
    9165,   //    27
    8777,   //    28
    8408,   //    29
    8055,   //    30
    7721,   //    31
    7402,   //    32
    7098,   //    33
    6808,   //    34
    6531,   //    35
    6267,   //    36
    6015,   //    37
    5774,   //    38
    5545,   //    39
    5325,   //    40
    5116,   //    41
    4916,   //    42
    4725,   //    43
    4543,   //    44
    4368,   //    45
    4201,   //    46
    4041,   //    47
    3888,   //    48
    3742,   //    49
    3602,   //    50
    3468,   //    51
    3340,   //    52
    3217,   //    53
    3099,   //    54
    2987,   //    55
    2878,   //    56
    2775,   //    57
    2675,   //    58
    2580,   //    59
    2488,   //    60
    2010,   //    61
    2317,   //    62
    2236,   //    63
    2158,   //    64
    2084,   //    65
    2012,   //    66
    1944,   //    67
    1878,   //    68
    1814,   //    69
    1753,   //    70
    1695,   //    71
    1638,   //    72
    1584,   //    73
    1532,   //    74
    1482,   //    75
    1433,   //    76
    1387,   //    77
    1342,   //    78
    1299,   //    79
    1257,   //    80
    1218,   //    81
    1179,   //    82
    1142,   //    83
    1106,   //    84
    1072,   //    85
    1039,   //    86
    1007,   //    87
     976,   //    88
     946,   //    89
     917,   //    90
     890,   //    91
     863,   //    92
     837,   //    93
     812,   //    94
     788,   //    95
     765,   //    96
     743,   //    97
     721,   //    98
     700,   //    99
     680,   //   100
     660,   //   101
     641,   //   102
     623,   //   103
     605,   //   104
     588,   //   105
     572,   //   106
     556,   //   107
     540,   //   108
     525,   //   109
     511,   //   110
     497,   //   111
     483,   //   112
     470,   //   113
     458,   //   114
     445,   //   115
     435,   //   116
     422,   //   117
     411,   //   118
     400,   //   119
     389,   //   120
     379,   //   121
     369,   //   122
     360,   //   123
     350,   //   124
     341    //   125    435 (+/- 3)
};
#endif

/***********************************************************************************************************************
 * Euroswitch con partitore 4K7 1%-390K
 *   (indice = T °C, valore = count adc)
 **********************************************************************************************************************/
#if(EUROSWITCH_100K == 1)
const uint32_t tab_EUROS100[] = {
  // ohm          �C    adc

 2282847,   //   -30    3918 (+/- 4)
 2135015,   //   -29
 1997630,   //   -28
 1869894,   //   -27
 1751077,   //   -26
 1640506,   //   -25
 1537564,   //   -24
 1441618,   //   -23
 1352335,   //   -22
 1269045,   //   -21
 1191366,   //   -20
 1118891,   //   -19
 1051242,   //   -18
  988071,   //   -17
  929058,   //   -16
  873908,   //   -15
  822345,   //   -14
  774118,   //   -13
  728993,   //   -12
  666753,   //   -11
  647200,   //   -10
  610147,   //    -9
  575424,   //    -8
  542872,   //    -7
  512343,   //    -6
  483702,   //    -5
  456821,   //    -4
  431583,   //    -3
  407879,   //    -2
  385608,   //    -1
  364676,   //     0
  344996,   //     1
  326485,   //     2
  309069,   //     3
  292678,   //     4
  277245,   //     5
  262710,   //     6
  249016,   //     7
  236110,   //     8
  223942,   //     9
  212467,   //    10
  201642,   //    11
  191427,   //    12
  181784,   //    13
  172678,   //    14
  164077,   //    15
  155950,   //    16
  148269,   //    17
  141007,   //    18
  134139,   //    19
  127642,   //    20
  121494,   //    21
  115674,   //    22
  110164,   //    23
  104944,   //    24
  100000,   //    25
   95314,   //    26
   90872,   //    27
   86661,   //    28
   82666,   //    29
   78876,   //    30
   75280,   //    31
   71866,   //    32
   68624,   //    33
   65546,   //    34
   62621,   //    35
   59841,   //    36
   57200,   //    37
   54688,   //    38
   52299,   //    39
   50027,   //    40
   47865,   //    41
   45808,   //    42
   43849,   //    43
   41984,   //    44
   40207,   //    45
   38515,   //    46
   36903,   //    47
   35366,   //    48
   33900,   //    49
   32503,   //    50
   31170,   //    51
   29899,   //    52
   28686,   //    53
   27527,   //    54
   26442,   //    55
   25366,   //    56
   24358,   //    57
   23395,   //    58
   22474,   //    59
   21594,   //    60
   20753,   //    61
   19949,   //    62
   19180,   //    63
   18445,   //    64
   17741,   //    65
   17067,   //    66
   16442,   //    67
   15805,   //    68
   15214,   //    69
   14648,   //    70
   14106,   //    71
   13586,   //    72
   13088,   //    73
   12611,   //    74
   12153,   //    75
   11714,   //    76
   11293,   //    77
   10889,   //    78
   10502,   //    79
   10130,   //    80
    9773,   //    81
    9430,   //    82
    9101,   //    83
    8786,   //    84
    8482,   //    85
    8190,   //    86
    7910,   //    87
    7641,   //    88
    7382,   //    89
    7133,   //    90
    6894,   //    91
    6664,   //    92
    6442,   //    93
    6229,   //    94
    6024,   //    95
    5827,   //    96
    5637,   //    97
    5454,   //    98
    5278,   //    99
    5108,   //   100
    4945,   //   101
    4788,   //   102
    4636,   //   103
    4490,   //   104
    4349,   //   105
    4213,   //   106
    4082,   //   107
    3956,   //   108
    3834,   //   109
    3717,   //   110
    3603,   //   111
    3345,   //   112
    3388,   //   113
    3287,   //   114
    3188,   //   115
    3093,   //   116
    3001,   //   117
    2913,   //   118
    2827,   //   119
    2745,   //   120
    2665,   //   121
    2587,   //   122
    2513,   //   123
    2441,   //   124
    2371    //   125    (1708 +/- 3)
};
#endif

/***********************************************************************************************************************
 * TDK B57500M con partitore 3K3 1%-390K
 *   (indice = T °C, valore = count adc)
 **********************************************************************************************************************/
#if(TDKB57500M == 1)
const uint32_t tab_TDKB57500M[] = {
  // ohm          �C    adc
  177000,   //   -30
  167680,   //   -29
  158360,   //   -28
  149040,   //   -27
  139720,   //   -26
  130400,   //   -25
  123734,   //   -24
  117068,   //   -23
  110402,   //   -22
  103736,   //   -21
   97070,   //   -20
   92242,   //   -19
   87414,   //   -18
   82586,   //   -17
   77758,   //   -16
   72930,   //   -15
   69410,   //   -14
   65890,   //   -13
   62370,   //   -12
   58850,   //   -11
   55330,   //   -10
   52728,   //    -9
   50126,   //    -8
   47524,   //    -7
   44922,   //    -6
   42320,   //    -5
   40388,   //    -4
   38456,   //    -3
   36524,   //    -2
   34592,   //    -1
   32660,   //     0
   31206,   //     1
   29752,   //     2
   28298,   //     3
   26844,   //     4
   25390,   //     5
   24292,   //     6
   23194,   //     7
   22096,   //     8
   20998,   //     9
   19900,   //    10
   19062,   //    11
   18224,   //    12
   17386,   //    13
   16548,   //    14
   15710,   //    15
   15066,   //    16
   14422,   //    17
   13778,   //    18
   13134,   //    19
   12490,   //    20
   11992,   //    21
   11494,   //    22
   10996,   //    23
   10498,   //    24
   10000,   //    25
    9611,   //    26
    9223,   //    27
    8834,   //    28
    8446,   //    29
    8057,   //    30
    7752,   //    31
    7447,   //    32
    7141,   //    33
    6836,   //    34
    6531,   //    35
    6290,   //    36
    6049,   //    37
    5809,   //    38
    5568,   //    39
    5327,   //    40
    5135,   //    41
    4944,   //    42
    4752,   //    43
    4561,   //    44
    4369,   //    45
    4216,   //    46
    4063,   //    47
    3909,   //    48
    3756,   //    49
    3603,   //    50
    3480,   //    51
    3356,   //    52
    3233,   //    53
    3109,   //    54
    2986,   //    55
    2886,   //    56
    2787,   //    57
    2687,   //    58
    2588,   //    59
    2488,   //    60
    2407,   //    61
    2326,   //    62
    2245,   //    63
    2164,   //    64
    2083,   //    65
    2017,   //    66
    1951,   //    67
    1884,   //    68
    1818,   //    69
    1752,   //    70
    1698,   //    71
    1644,   //    72
    1589,   //    73
    1535,   //    74
    1481,   //    75
    1436,   //    76
    1392,   //    77
    1347,   //    78
    1303,   //    79
    1258,   //    80
    1221,   //    81
    1184,   //    82
    1146,   //    83
    1109,   //    84
    1072,   //    85
    1041,   //    86
    1010,   //    87
     979,   //    88
     949,   //    89
     918,   //    90
     892,   //    91
     866,   //    92
     840,   //    93
     814,   //    94
     789,   //    95
     767,   //    96
     745,   //    97
     723,   //    98
     702,   //    99
     680,   //   100
     662,   //   101
     643,   //   102
     625,   //   103
     607,   //   104
     589,   //   105
     573,   //   106
     558,   //   107
     542,   //   108
     527,   //   109
     511,   //   110
     498,   //   111
     485,   //   112
     472,   //   113
     459,   //   114
     445,   //   115
     434,   //   116
     423,   //   117
     412,   //   118
     401,   //   119
     389,   //   120
     380,   //   121
     370,   //   122
     361,   //   123
     351,   //   124
     342    //   125 (392 +/- 3)
};
#endif

/***********************************************************************************************************************
 * END OF FILE
 **********************************************************************************************************************/










